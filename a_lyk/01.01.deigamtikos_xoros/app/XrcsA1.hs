module XrcsA1 (exercise_1) where

import Data.Algebra.Helpers

exercise_1 :: IO ()
exercise_1 = do
  -- \| ΕΚΦΩΝΗΣΗ

  prepareText "1. Ένα κουτί έχει τρεις μπάλες, μια άσπρη, μια μαύρη και μια κόκκινη. Κάνουμε το εξής πείραμα: παίρνουμε από το κουτί μια μπάλα, καταγράφουμε το χρώμα της και την ξαναβάζουμε στο κουτί. Στη συνέχεια παίρνουμε μια δεύτερη μπάλα και καταγράφουμε επίσης το χρώμα της. (Όπως λέμε παίρνουμε διαδοχικά δύο μπάλες με επανατοποθέτηση).\n    i) Ποιος είναι ο δειγματικός χώρος του πειράματος;\n   ii) Ποιο είναι το ενδεχόμενο \"η πρώτη μπάλα να είναι κόκκινη\";\n  iii) Ποιο είναι το ενδεχόμενο \"να εξαχθεί και τις δυο φορές μπάλα με το ίδιο χρώμα;\n"

  -- \| ΔΕΔΟΜΕΝΑ
  let _W = combinations "AKM"

  -- ii η πρώτη μπάλα να είναι κοκκινη
  let _A = filter (\(a, _) -> a == 'K') _W

  -- iii να είναι ίδιες οι μπάλες
  let _B = filter (\(a, b) -> a == b) _W

  -- \| ΛΥΣΗ
  prepareText $
    "ΛΥΣΗ\n----\nΟι πιθανές εκβάσεις είναι\n    'A' -> Άσπρη μπάλα\n    'M' -> Μαύρη μπάλα\n    'K' -> Κόκκινη μπάλα\n\n  i) Εφόσον υπάρχει επανατοποθέτηση τότε ο δειγματικός χώρος Ω είναι το καρτεσιανό γινόμενο { 'Α', 'Κ', 'M' }X{ 'Α', 'Κ', 'M' } \n    "
      ++ formatSampleSpace tupleFormatter "Ω" _W
      ++ "\n\n"
      ++ "  ii) Για το ενδεχόμενο Α ⊆ Ω, ισχύει Α = {(x,y) ∈ Ω | x = 'Κ'}. Οπότε:"
      ++ "\n    "
      ++ formatSampleSpace tupleFormatter "A" _A
      ++ "\n\n"
      ++ "iii) Για το ενδεχόμενο B ⊆ Ω, ισχύει B = {(x,y) ∈ Ω | x = y }. Οπότε:"
      ++ "\n    "
      ++ formatSampleSpace tupleFormatter "B" _B
